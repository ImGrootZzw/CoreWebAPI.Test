<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreWebAPI.Common</name>
    </assembly>
    <members>
        <member name="T:CoreWebAPI.Common.AppConfig.AppSecretConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.AppConfig.AppSecretConfig.Audience_Secret_String">
            <summary>
            JWT密钥，在配置文件appsettings.json中配置Secret或SecretFile（高优先级）
            {"Audience"{ "Secret":"","SecretFile":""}}
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.DB.BaseDBConfig.SpecialDbString(CoreWebAPI.Common.DB.MutiDBOperate)">
            <summary>
            定制Db字符串
            目的是保证安全：优先从本地txt文件获取，若没有文件则从appsettings.json中获取
            </summary>
            <param name="mutiDBOperate"></param>
            <returns></returns>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.ConnId">
            <summary>
            连接ID
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.MainConnId">
            <summary>
            作为从库时，主库连接ID
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.Enabled">
            <summary>
            连接启用开关
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.HitRate">
            <summary>
            从库执行级别，越大越先执行
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.Connection">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MutiDBOperate.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.GetFieldFilter(System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            根据字段、MongoDbType、值产生FilterDefinition
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.SetFilterBsonDocument(System.String,System.String,System.String,System.Object,System.Object,MongoDB.Bson.BsonDocument@)">
            <summary>
            根据字段、MongoDbType、值设置BsonDocument
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.Query(MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument},System.Object,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            查询
            </summary>
            <param name="query">查询条件</param>
            <param name="selectField">查询字段</param>
            <param name="ignoreField">忽略字段</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.QueryPage(System.Int32@,MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument},System.Object,System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            查询
            </summary>
            <param name="query">查询条件</param>
            <param name="sortList">排序</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">一页展示数量</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.QueryMuch(System.String,System.String,System.String,System.String,System.Object,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            查询
            </summary>
            <param name="fromCollection">联查目标集合</param>
            <param name="localField">当前集合中的关联字段</param>
            <param name="foreignField">目标集合中的关联字段</param>
            <param name="asField">联查结果保存字段名</param>
            <param name="selectField">查询字段</param>
            <param name="ignoreField">忽略字段</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.QueryMuchPage(System.String,System.String,System.String,System.String,System.Object,System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            查询
            </summary>
            <param name="fromCollection">联查目标集合</param>
            <param name="localField">当前集合中的关联字段</param>
            <param name="foreignField">目标集合中的关联字段</param>
            <param name="asField">联查结果保存字段名</param>
            <param name="selectField">查询字段</param>
            <param name="ignoreField">忽略字段</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.QueryMuch(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            查询
            </summary>
            <param name="pipeline">pipeline</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.Add``1(``0)">
            <summary>
            添加
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.Upload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传单个附件
            </summary>
            <param name="file">上传文件</param>
            <returns>MongoDB文件ID</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.UpdateOne(MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument},MongoDB.Driver.UpdateDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.Delete(MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.DeleteAsync(MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.DeleteManyAsync(MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            批量删除
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.Download(System.String)">
            <summary>
            根据fileId返回base64字符串
            </summary>
            <param name="fileId">fs.files集合中的_id</param>
            <returns>base64</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.BsonDocumentToDataTable(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})">
            <summary>
            
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.FilterBsonDocument">
            <summary>
            自定义查询产生BsonDocument
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.FilterBsonDocument.Main">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.FilterBsonDocument.Detail">
            <summary>
            文件ID
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.DynamicSearchModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.DynamicSearchModel.FieldList">
            <summary>
            描述 : 查询字段列表 当字段列表为空或不填写时，默认查询全部字段
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.DynamicSearchModel.ConditionList">
            <summary>
            描述 : 查询条件列表 当条件列表为空或不填时，则不设查询条件
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionFieldModel">
            <summary>
            字段条件
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionFieldModel.Field">
            <summary>
            描述 : 字段
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionFieldModel.Conditions">
            <summary>
            描述 : 条件
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.MongoDbType">
            <summary>
            描述 : 字段类型
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.Type">
            <summary>
            描述 : 条件类型 eq：等于，ne：不等于，lt：小于，lte：小于等于，gt：大于，gte：大于等于，like：模糊匹配，in：包含,between：在...之间
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.FirstValue">
            <summary>
            描述 : 该参数可为任意值，当类型为boolean时，只可以使用eq类型。当类型为in时，需传输Array对象
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.SecondValue">
            <summary>
            描述 : 该参数只在类型为between时使用，为between的第二个值
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.IgnoreCase">
            <summary>
            描述 : 该参数设置与上一个条件的连接关系，只要and或or，默认使用and
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MongoDB.MongoDBHelper.ConditionModel.Operation">
            <summary>
            描述 : 该参数设置与上一个条件的连接关系，只要and或or，默认使用and
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetMainConnectionDb">
            <summary>
            连接字符串 
            WebAPI
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MyContext.ConnectionString">
            <summary>
            连接字符串 
            WebAPI
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MyContext.DbType">
            <summary>
            数据库类型 
            WebAPI 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.DB.MyContext.Db">
            <summary>
            数据连接对象 
            WebAPI 
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.#ctor(SqlSugar.ISqlSugarClient)">
            <summary>
            功能描述:构造函数
            作　　者:WebAPI
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:WebAPI
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:WebAPI
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:WebAPI
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:WebAPI
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            作　　者:WebAPI
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            作　　者:WebAPI
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            作　　者:WebAPI
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:WebAPI
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:CoreWebAPI.Common.DB.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:WebAPI
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.ClassMapSqlsugar">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ClassMapSqlsugar.GetDBColumnName``1(System.String)">
            <summary>
            获取模型属性名
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field">数据库字段名</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ClassMapSqlsugar.GetDBSort``1(System.Object)">
            <summary>
            获取数据库排序字段
            </summary>
            <typeparam name="TEntity">数据库模型</typeparam>
            <param name="sortObj">排序字段List</param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.SortModel">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.SortModel.SortParam">
            <summary>
            描述 : 排序字段
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.SortModel.Ascending">
            <summary>
            描述 : 正序
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.DbDynamicQueryHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.DbDynamicQueryHelper.PgsqlDynamicWhereSqlGet``1(System.Object)">
            <summary>
            获取动态查询条件语句 
            </summary>
            <typeparam name="TEntity">带SugarColumn(ColumnName)特性的实体，建立动态查询条件字段与数据库字段的mapping关系</typeparam>
            <param name="searchModel">动态查询条件字段及条件</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.DbDynamicQueryHelper.PgsqlDynamicWhereSqlParaGet``1(System.Object)">
            <summary>
            获取动态查询条件语句 
            </summary>
            <typeparam name="TEntity">带SugarColumn(ColumnName)特性的实体，建立动态查询条件字段与数据库字段的mapping关系</typeparam>
            <param name="searchModel">动态查询条件字段及条件</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.DbDynamicQueryHelper.PgsqlDynamicWhereSqlGetBY``1(System.Object)">
            <summary>
            获取动态查询条件语句 (表格查询)
            </summary>
            <typeparam name="TEntity">带SugarColumn(ColumnName)特性的实体，建立动态查询条件字段与数据库字段的mapping关系</typeparam>
            <param name="searchModel">动态查询条件字段及条件</param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.DynamicSearchModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.DynamicSearchModel.FieldList">
            <summary>
            描述 : 查询字段列表 当字段列表为空或不填写时，默认查询全部字段
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.DynamicSearchModel.ConditionList">
            <summary>
            描述 : 查询条件列表 当条件列表为空或不填时，则不设查询条件
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.ConditionFieldModel">
            <summary>
            字段条件
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionFieldModel.Field">
            <summary>
            描述 : 字段
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionFieldModel.Conditions">
            <summary>
            描述 : 条件
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.ConditionModel">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionModel.Type">
            <summary>
            描述 : 条件类型 eq：等于，ne：不等于，lt：小于，lte：小于等于，gt：大于，gte：大于等于，like：模糊匹配，in：包含,between：在...之间
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionModel.FirstValue">
            <summary>
            描述 : 该参数可为任意值，当类型为boolean时，只可以使用eq类型。当类型为in时，需传输Array对象
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionModel.SecondValue">
            <summary>
            描述 : 该参数只在类型为between时使用，为between的第二个值
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionModel.IgnoreCase">
            <summary>
            描述 : 该参数设置与上一个条件的连接关系，只要and或or，默认使用and
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.ConditionModel.Operation">
            <summary>
            描述 : 该参数设置与上一个条件的连接关系，只要and或or，默认使用and
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.Appsettings">
            <summary>
            appsettings.json操作类
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.Appsettings.Update(System.String)">
            <summary>
            读取Nacos配置输出到本地，并注册到全局配置
            </summary>
            <param name="json">配置json字符串</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.Appsettings.App(System.String[])">
            <summary>
            封装要操作的字符
            </summary>
            <param name="sections">节点配置</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.Appsettings.App``1(System.String[])">
            <summary>
            递归获取配置信息数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.EmailHelper.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
             构造函数
            </summary>
            <param name="server">发件箱的邮件服务器地址（IP形式或字符串形式均可）</param>
            <param name="port">发送邮件所用的端口号（htmp协议默认为25）</param>
            <param name="enableSsl">true表示对邮件内容进行socket层加密传输，false表示不加密</param>
            <param name="pwdCheckEnable">true表示对发件人邮箱进行密码验证，false表示不对发件人邮箱进行密码验证</param>
            <param name="username">发件箱的用户名（即@符号前面的字符串，例如：hello@163.com，用户名为：hello）</param>
            <param name="password">发件人邮箱密码</param>
            <param name="fromMail">发件人邮箱地址</param>
            <param name="toMail">收件人地址（可以是多个收件人，程序中是以“,"进行区分的）</param>
            <param name="subject">邮件标题</param>
            <param name="emailBody">邮件内容</param>
            <param name="isBodyHtml">邮件内容是否为html格式</param>
            <param name="attachment">邮件附件,路径以分号分隔</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.EmailHelper.AddAttachments(System.String)">
            <summary>
             添加附件
            </summary>
            <param name="attachmentsPath">附件的路径集合，以分号分隔</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.EmailHelper.Send(System.Boolean@,System.String@)">
            <summary>
             邮件的发送
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.ExcelHelper">
            <summary>
            HELPER
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ExcelHelper.#ctor(System.String)">
            <summary>
            构建
            </summary>
            <param name="fileName">文件</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ExcelHelper.DataTableToExcel(System.Data.DataTable,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将DataTable数据导入到excel中
            </summary>
            <param name="data">要导入的数据</param>
            <param name="sheetName">要导入的excel的sheet的名称，默认:sheet1</param>
            <param name="isColumnWritten">DataTable的列名是否要导入,默认true</param>
            <param name="dateFormat">日期格式，默认:yyyy/MM/dd</param>
            <param name="intFormat">整数值格式，默认:#,##0</param>
            <param name="decFormat">浮点数值格式，默认:#,##0.00</param>
            <param name="boolTrueFormat">布尔值“真”格式，默认:yes</param>
            <param name="boolFalseFormat">布尔值“假”格式，默认:no</param>
            <returns>导出数据行数(包含列名那一行)</returns>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.ExcelHelper.DTlist">
            <summary>
            输出excel的datatable结构体
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ExcelHelper.DataTableListToExcel(System.Collections.Generic.List{CoreWebAPI.Common.Helper.ExcelHelper.DTlist},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dtlistdata">数据集合</param>
            <param name="dateFormat">日期格式，默认:yyyy/MM/dd</param>
            <param name="intFormat">整数值格式，默认:#,##0</param>
            <param name="decFormat">浮点数值格式，默认:#,##0.00</param>
            <param name="boolTrueFormat">布尔值“真”格式，默认:yes</param>
            <param name="boolFalseFormat">布尔值“假”格式，默认:no</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ExcelHelper.ExcelToDataTable(System.String,System.Boolean)">
            <summary>
            将excel中的数据导入到DataTable中
            </summary>
            <param name="sheetName">excel工作薄sheet的名称</param>
            <param name="isFirstRowColumn">第一行是否是DataTable的列名</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ExcelHelper.GetCellValue(NPOI.SS.UserModel.ICell,System.Boolean)">
            <summary>
            获取单元格类型
            </summary>
            <param name="cell">单元格</param>
            <param name="isFormula">单元格内容是否为公式</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.GetPostfixStr(System.String)">
            <summary>
            取后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>.gif|.html格式</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.WriteFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
            <param name="encode">编码格式</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.ReadFile(System.String,System.Text.Encoding)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="encode">编码格式</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="orignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="orignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="orignFolder">当前目录</param>
            <param name="newFloder">新目录</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.FileHelper.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.HttpType">
            <summary>
            请求类型
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.BodyType">
            <summary>
            Body类型
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.FormItemModel">
            <summary>
            上传文件流用
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.FormItemModel.Key">
            <summary>
            表单键，request["key"]
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.FormItemModel.Value">
            <summary>
            表单值,上传文件时忽略，request["key"].value
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.FormItemModel.IsFile">
            <summary>
            是否是文件
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.FormItemModel.FileName">
            <summary>
            上传的文件名
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.FormItemModel.FileContent">
            <summary>
            上传的文件内容
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ObjectToJson(System.Object)">
            <summary>
            Json对Object序列化操作函数
            </summary>
            <param name="Obj"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.JsonToObject(System.String,System.Type)">
            <summary>
            Json对Object反序列化操作函数
            </summary>
            <param name="Json"></param>
            <param name="Type"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.JsonToObject``1(System.String)">
            <summary>
            Json对Object反序列化操作函数
            </summary>
            <param name="Json"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.Deserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.DataTableToJson(System.Data.DataTable)">
            <summary>
            Json对DataTable序列化操作函数
            </summary>
            <param name="DataTable">需要转换的DataTable</param>
            <returns>返回一个序列化后的字符串</returns>
            <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.JsonToDataSet(System.String)">
            <summary>
            Json对DataTable序列化后的Json字符串进行反序列化操作函数
            </summary>
            <param name="JsonString">DataTable序列化后的Json字符串</param>
            <returns>返回DataSet</returns>
            <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.JsonToDataTable(System.String)">
            <summary>
                ''' Json对DataTable序列化后的Json字符串进行反序列化操作函数
                ''' </summary>
                ''' <param name="JsonString">DataTable序列化后的Json字符串</param>
                ''' <returns>返回转换的DataTable为DataSet第一个表</returns>
                ''' <remarks></remarks>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.NewJsonToDataTable(System.String)">
            <summary>
            将json转换为DataTable
            </summary>
            <param name="strJson">得到的json</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.GetJSON``1(System.Object)">
            <summary>
            转换对象为JSON格式数据
            </summary>
            <typeparam name="T">类</typeparam>
            <param name="obj">对象</param>
            <returns>字符格式的JSON数据</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.JSON``1(System.Collections.Generic.List{``0})">
            <summary>
            转换List&lt;T>的数据为JSON格式
            </summary>
            <typeparam name="T">类</typeparam>
            <param name="vals">列表值</param>
            <returns>JSON格式数据</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ParseFormByJson``1(System.String)">
            <summary>
            JSON格式字符转换为T类型的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractObj(System.String)">
            <summary>
            提取json字符串对象
            例如输入：{"1":1,"a":"aa","aa":"{\"2\":2,\"bb\":\"{\\\"3\\\":3,\\\"cc\\\":\\\"ccc\\\"}\"}"}
            例如输出：{"1":1,"a":"aa","aa":{"2":2,"bb":{"3":3,"cc":"ccc"}}}
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractObj(Newtonsoft.Json.Linq.JObject)">
            <summary>
            提取json对象
            例如输入：{"1":1,"a":"aa","aa":"{\"2\":2,\"bb\":\"{\\\"3\\\":3,\\\"cc\\\":\\\"ccc\\\"}\"}"}
            例如输出：{"1":1,"a":"aa","aa":{"2":2,"bb":{"3":3,"cc":"ccc"}}}
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractArr(System.String)">
            <summary>
            提取json字符串数组
            例如输入：["5","6","[\"3\",\"4\",\"[\\\"1\\\",\\\"2\\\"]\"]"]
            例如输出：["5","6",["3","4",["1","2"]]]
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractArr(Newtonsoft.Json.Linq.JArray)">
            <summary>
            提取json数组
            例如输入：["5","6","[\"3\",\"4\",\"[\\\"1\\\",\\\"2\\\"]\"]"]
            例如输出：["5","6",["3","4",["1","2"]]]
            </summary>
            <param name="jArr"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractAll(System.String)">
            <summary>
            提取json字符串（支持json字符串的对象、数组、字符串）
            例如输入：["5","6","[\"3\",\"4\",\"[\\\"1\\\",\\\"2\\\"]\"]","{\"1\":2,\"a\":\"ab\"}"]
            例如输出：["5","6",["3","4",["1","2"]],{"1":2,"a":"ab"}]
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.ExtractAll(Newtonsoft.Json.Linq.JToken)">
            <summary>
            提取json（支持json对象、数组、字符串）
            例如输入：["5","6","[\"3\",\"4\",\"[\\\"1\\\",\\\"2\\\"]\"]","{\"1\":2,\"a\":\"ab\"}"]
            例如输出：["5","6",["3","4",["1","2"]],{"1":2,"a":"ab"}]
            </summary>
            <param name="jToken"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.JsonHelper.IsJson(System.String)">
            <summary>
            是否为json（开头是'{','['的）
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.SortType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.Helper.SortType.ASC">
            <summary>
            正序
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.Helper.SortType.DESC">
            <summary>
            倒序
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.GetNotNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            校验列表是否为空，是返回空列表，否返回当前列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.ListToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            List转DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.ToDataList``1(System.Data.DataTable)">
            <summary>
            DataTable转成List
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.ListToDictionary``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            List转Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.GetPage``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Object)">
            <summary>
            List分页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisList">数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页大小</param>
            <param name="sortObj">排序字段:[{sortParam: "fieldName", ascending: true}]</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.GetPageModel``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Object)">
            <summary>
            List分页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisList">数据源</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页大小</param>
            <param name="sortObj">排序字段:[{sortParam: "fieldName", ascending: true}]</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.GetPageWithSelect``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Object)">
            <summary>
            List获取分页数据、列筛选数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisList">数据源</param>
            <param name="selectFileds">列筛选字段</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页大小</param>
            <param name="sortObj">排序字段:[{sortParam: "fieldName", ascending: true}]</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.ListHelper.GetSelectPage``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Int32,System.Int32)">
            <summary>
            List获取列分页数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="thisList">数据源</param>
            <param name="selectFileds">列筛选字段</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页大小</param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.PageModel`1.List">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.PageModel`1.Count">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.PageModel`1.PageIndex">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.PageModel`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MapperHelper.Mapper``2(``1)">
            <summary>
            反射实现两个类的对象之间相同属性的值的复制
            适用于初始化新实体
            </summary>
            <typeparam name="R">返回的实体</typeparam>
            <typeparam name="S">数据源实体</typeparam>
            <param name="s">数据源实体</param>
            <returns>返回的新实体</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MapperHelper.MapperHist``2(``1,``1)">
            <summary>
            反射实现历史表赋值
            </summary>
            <typeparam name="R">返回的实体</typeparam>
            <typeparam name="S">数据源实体</typeparam>
            <param name="sOld">修改前数据实体</param>
            <param name="sNew">修改后数据实体</param>
            <returns>返回的新实体</returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MapperHelper.MapperToModel``2(``0,``1,System.Boolean,System.Boolean)">
            <summary>
            反射实现两个类的对象之间相同属性的值的复制
            适用于没有新建实体之间
            </summary>
            <typeparam name="R">返回的实体</typeparam>
            <typeparam name="S">数据源实体</typeparam>
            <param name="r">返回的实体</param>
            <param name="s">数据源实体</param>
            <param name="isContainsNull">字段为null是否的跳过</param>
            <param name="isContainsEmpty">字段为空字符串的是否的跳过</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MD5Helper.MD5Encrypt16(System.String)">
            <summary>
            16位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MD5Helper.MD5Encrypt32(System.String)">
            <summary>
            32位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MD5Helper.MD5Encrypt64(System.String)">
            <summary>
            64位MD5加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.MultiLangHelper.GetMessage(System.String,System.Int32,System.String)">
            <summary>
            获取错误多语言信息
            </summary>
            <param name="thisValue">默认信息</param>
            <param name="code">错误代码</param>
            <param name="lang">语言</param>
            <returns></returns>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.Id">
            <summary>
            描述 : Id
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.DbName">
            <summary>
            描述 : DbName
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.TableName">
            <summary>
            描述 : TableName
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.TableIndex">
            <summary>
            描述 : TableIndex
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.TableData">
            <summary>
            描述 : TableData
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.Helper.MessageModel.ActionMode">
            <summary>
            描述 : ActionMode
            空值 : False
            默认 : 
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.Helper.RabbitHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.RabbitHelper.#ctor(System.Collections.Generic.List{System.String},System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.RabbitHelper.SendMsg(System.Object,System.String)">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.RabbitHelper.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UnicodeHelper.StringToUnicode(System.String)">
            <summary>
            字符串转Unicode码
            </summary>
            <returns>The to unicode.</returns>
            <param name="value">Value.</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UnicodeHelper.UnicodeToString(System.String)">
            <summary>
            Unicode转字符串
            </summary>
            <returns>The to string.</returns>
            <param name="unicode">Unicode.</param>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetIsEmptyOrNull(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetIsNotEmptyOrNull(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCInt(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCInt(System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCMoney(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCMoney(System.Object,System.Double)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCString(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCString(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDecimal(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDecimal(System.Object,System.Decimal)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDouble(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDouble(System.Object,System.Double)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDate(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCDate(System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.UtilConvert.GetCBool(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.WordHelper.ParagraphSetting(NPOI.XWPF.UserModel.XWPFDocument,System.String,NPOI.XWPF.UserModel.ParagraphAlignment,System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            创建word文档中的段落对象和设置段落文本的基本样式（字体大小，字体，字体颜色，字体对齐位置）
            </summary>
            <param name="document">文档</param>
            <param name="content">段落第一个文本对象填充的内容</param>
            <param name="paragraphAlign">段落排列（左对齐，居中，右对齐）</param>
            <param name="firstLineIndent">首行缩进</param>
            <param name="fontFamily">字体</param>
            <param name="fontSize">字体大小</param>
            <param name="fontColor">字体颜色--十六进制</param>
            <param name="isBold">是否加粗</param>
            <param name="isItalic">是否设置斜体</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.WordHelper.WriteText(System.String,NPOI.XWPF.UserModel.ParagraphAlignment,System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            创建word文档中的段落对象和设置段落文本的基本样式（字体大小，字体，字体颜色，字体对齐位置）
            </summary>
            <param name="content">段落第一个文本对象填充的内容</param>
            <param name="paragraphAlign">段落排列（左对齐，居中，右对齐）</param>
            <param name="firstLineIndent">首行缩进</param>
            <param name="fontFamily">字体</param>
            <param name="fontSize">字体大小</param>
            <param name="fontColor">字体颜色--十六进制</param>
            <param name="isBold">是否加粗</param>
            <param name="isItalic">是否设置斜体</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.WordHelper.WriteTable(System.Data.DataTable,NPOI.XWPF.UserModel.ParagraphAlignment,System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            创建word文档中的段落对象和设置段落文本的基本样式（字体大小，字体，字体颜色，字体对齐位置）
            </summary>
            <param name="dt">段落第一个文本对象填充的内容</param>
            <param name="paragraphAlign">段落排列（左对齐，居中，右对齐）</param>
            <param name="firstLineIndent">首行缩进</param>
            <param name="fontFamily">字体</param>
            <param name="fontSize">字体大小</param>
            <param name="fontColor">字体颜色--十六进制</param>
            <param name="isBold">是否加粗</param>
            <param name="isItalic">是否设置斜体</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Helper.WordHelper.TableParagraphSetting(NPOI.XWPF.UserModel.XWPFTable,System.String,NPOI.XWPF.UserModel.ParagraphAlignment,System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary> 
            创建Word文档中表格段落实例和设置表格段落文本的基本样式（字体大小，字体，字体颜色，字体对齐位置）
            </summary> 
            <param name="table">表格对象</param> 
            <param name="content">要填充的文字</param> 
            <param name="paragraphAlign">段落排列（左对齐，居中，右对齐）</param>
            <param name="firstLineIndent">首行缩进</param>
            <param name="fontFamily">字体</param>
            <param name="isBold">是否加粗（true加粗，false不加粗）</param>
            <param name="fontSize">字体大小</param>
            <param name="fontColor">字体颜色--十六进制</param>
            <param name="isItalic">是否设置斜体（字体倾斜）</param>
            <returns></returns> 
        </member>
        <member name="T:CoreWebAPI.Common.Permissions">
            <summary>
            全局变量配置
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.Permissions.IsUseIds4">
            <summary>
            当前项目是否启用IDS4权限方案
            true：表示启动IDS4
            false：表示使用JWT
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.RoutePrefix">
            <summary>
            路由变量前缀配置
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.RoutePrefix.Name">
            <summary>
            前缀名
            如果不需要，尽量留空，不要修改
            除非一定要在所有的 api 前统一加上特定前缀
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.RedisMqKey">
            <summary>
            RedisMqKey
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpContext.IHttpContextCore.IP">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpContext.IHttpContextCore.API">
            <summary>
            API Url
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpContext.IHttpContextCore.User">
            <summary>
            User，需在Header头中添加x-user传值
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.HttpRestSharp.HttpHelper">
            <summary>
            基于 RestSharp 封装HttpHelper
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.HttpHelper.GetApi``1(System.String,System.String,System.String)">
            <summary>
            Get 请求
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="baseUrl">根域名:http://apk.neters.club/</param>
            <param name="url">接口:api/xx/yy</param>
            <param name="param">参数:id=1</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.HttpHelper.PostApi``1(System.String,System.Object)">
            <summary>
            Post 请求
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="url">完整的url</param>
            <param name="body">post body,可以匿名或者反序列化</param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.HttpRestSharp.IRestSharp">
            <summary>
            API请求执行者接口
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.IRestSharp.Execute(RestSharp.IRestRequest)">
            <summary>
            同步执行方法
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.IRestSharp.Execute``1(RestSharp.IRestRequest)">
            <summary>
            同步执行方法
            </summary>
            <typeparam name="T">返回值</typeparam>
            <param name="request">请求参数</param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.IRestSharp.ExecuteAsync(RestSharp.IRestRequest,System.Action{RestSharp.IRestResponse})">
            <summary>
            异步执行方法
            </summary>
            <param name="request">请求参数</param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.IRestSharp.ExecuteAsync``1(RestSharp.IRestRequest,System.Action{RestSharp.IRestResponse{``0}})">
            <summary>
            异步执行方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.HttpRestSharp.RestSharpClient">
            <summary>
            Rest接口执行者
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.client">
            <summary>
            请求客户端
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.BaseUrl">
            <summary>
            接口基地址
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.DefaultDateParameterFormat">
            <summary>
            默认的时间参数格式
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.DefaultAuthenticator">
            <summary>
            默认验证器
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.#ctor(System.String,RestSharp.Authenticators.IAuthenticator)">
            <summary>
            构造函数
            </summary>
            <param name="baseUrl"></param>
            <param name="authenticator"></param>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.Execute(RestSharp.IRestRequest)">
            <summary>
            通用执行方法
            </summary>
            <param name="request">请求参数</param>
            <remarks>
            调用实例：
            var client = new RestSharpClient("http://apk.neters.club/");
            var result = client.Execute(new RestRequest("v2/movie/in_theaters", Method.GET));
            var content = result.Content;//返回的字符串数据
            </remarks>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.Execute``1(RestSharp.IRestRequest)">
            <summary>
            同步执行方法
            </summary>
            <typeparam name="T">返回的泛型对象</typeparam>
            <param name="request">请求参数</param>
            <remarks>
             var client = new RestSharpClient("http://apk.neters.club/");
             var result = client.Execute&lt;List&lt;string>>(new RestRequest("v2/movie/in_theaters", Method.GET)); 
            </remarks>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.ExecuteAsync(RestSharp.IRestRequest,System.Action{RestSharp.IRestResponse})">
            <summary>
            异步执行方法
            </summary>
            <param name="request">请求参数</param>
            <param name="callback">回调函数</param>
            <remarks>
            调用实例：
            var client = new RestSharpClient("http://apk.neters.club/");
            client.ExecuteAsync&lt;List&lt;string>>(new RestRequest("v2/movie/in_theaters", Method.GET), result =>
            {
                 var content = result.Content;//返回的字符串数据
            });
            </remarks>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.HttpRestSharp.RestSharpClient.ExecuteAsync``1(RestSharp.IRestRequest,System.Action{RestSharp.IRestResponse{``0}})">
            <summary>
            异步执行方法
            </summary>
            <typeparam name="T">返回的泛型对象</typeparam>
            <param name="request">请求参数</param>
            <param name="callback">回调函数</param>
            <remarks>
            调用实例：
            var client = new RestSharpClient("http://apk.neters.club/");
            client.ExecuteAsync&lt;List&lt;string>>(new RestRequest("v2/movie/in_theaters", Method.GET), result =>
            {
                 if (result.StatusCode != HttpStatusCode.OK)
                 {
                    return;
                 }
                 var data = result.Data;//返回数据
            });
            </remarks>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.LogLock.ReadLog(System.String,System.String,System.Text.Encoding,CoreWebAPI.Common.LogHelper.ReadType)">
            <summary>
            读取文件内容
            </summary>
            <param name="folderPath">文件夹路径</param>
            <param name="fileName">文件名</param>
            <param name="encode">编码</param>
            <param name="readType">读取类型(0:精准,1:前缀模糊)</param>
            <returns></returns>
        </member>
        <member name="F:CoreWebAPI.Common.LogHelper.ReadType.Accurate">
            <summary>
            精确查找一个
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.LogHelper.ReadType.Prefix">
            <summary>
            指定前缀，模糊查找全部
            </summary>
        </member>
        <member name="F:CoreWebAPI.Common.LogHelper.ReadType.PrefixLatest">
            <summary>
            指定前缀，最新一个文件
            </summary>
        </member>
        <member name="T:CoreWebAPI.Common.LogHelper.WriteLogToMongoDBHelper">
            <summary>
            向MongoDB中插入log数据的帮助类
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.WriteLogToMongoDBHelper.WriteLogToMongoDB(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            写入操作日志到数据库
            </summary>
            <param name="solutionName"></param>
            <param name="domain"></param>
            <param name="timestamp"></param>
            <param name="user"></param>
            <param name="session"></param>
            <param name="ip"></param>
            <param name="menu"></param>
            <param name="apiName"></param>
            <param name="callStartTime"></param>
            <param name="apiTime"></param>
            <param name="apiTotaltime"></param>
            <param name="uiOuttime"></param>
            <param name="logsMsg"></param>
            <param name="outMsgSize"></param>
            <param name="inMsgSize"></param>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.WriteLogToMongoDBHelper.WriteDebugLogToMongoDB(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            写入Debug日志到数据库
            </summary>
            <param name="solutionName"></param>
            <param name="domain"></param>
            <param name="timestamp"></param>
            <param name="user"></param>
            <param name="session"></param>
            <param name="ip"></param>
            <param name="menu"></param>
            <param name="apiName"></param>
            <param name="callStartTime"></param>
            <param name="apiTime"></param>
            <param name="apiTotaltime"></param>
            <param name="logsMsg"></param>
        </member>
        <member name="T:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper">
            <summary>
            PGSQL日志帮助类
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.WriteLogToPgsql(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            写入操作日志到数据库
            </summary>
            <param name="solutionName"></param>
            <param name="domain"></param>
            <param name="timestamp"></param>
            <param name="user"></param>
            <param name="session"></param>
            <param name="ip"></param>
            <param name="menu"></param>
            <param name="apiName"></param>
            <param name="callStartTime"></param>
            <param name="apiTime"></param>
            <param name="apiTotaltime"></param>
            <param name="uiOuttime"></param>
            <param name="logsMsg"></param>
            <param name="outMsgSize"></param>
            <param name="inMsgSize"></param>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.WriteDebugLogToPgsql(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            写入Debug日志到数据库
            </summary>
            <param name="solutionName"></param>
            <param name="domain"></param>
            <param name="timestamp"></param>
            <param name="user"></param>
            <param name="session"></param>
            <param name="ip"></param>
            <param name="menu"></param>
            <param name="apiName"></param>
            <param name="callStartTime"></param>
            <param name="apiTime"></param>
            <param name="apiTotaltime"></param>
            <param name="logsMsg"></param>
        </member>
        <member name="T:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr">
            <summary>
            操作记录日志 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.Id">
            <summary>
            描述 : ID
            允许空值 : False
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsSollutionName">
            <summary>
            描述 : 项目
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsTimeStamp">
            <summary>
            描述 : 时间戳
            允许空值 : False
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsUser">
            <summary>
            描述 : 用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsSession">
            <summary>
            描述 : session
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsIp">
            <summary>
            描述 : ip
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsMenu">
            <summary>
            描述 : 菜单功能
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsApiName">
            <summary>
            描述 : 接口名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsCallStartTime">
            <summary>
            描述 : ID
            允许空值 : 调用开始时间
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsCallApiTime">
            <summary>
            描述 : 调到接口时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsApiTotalTime">
            <summary>
            描述 : 接口耗时时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsUiOutTime">
            <summary>
            描述 : 界面输出时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsMsgOutSize">
            <summary>
            描述 : 报文输出大小
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsMsgInsize">
            <summary>
            描述 : 报文输入大小
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.BlockLogsMsg">
            <summary>
            描述 : ID
            允许空值 : 日志信息
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.CrtDatetime">
            <summary>
            描述 : 创建时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.CrtProg">
            <summary>
            描述 : 程序名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.CrtUser">
            <summary>
            描述 : 创建用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.ModDatetime">
            <summary>
            描述 : 修改日期
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.ModProg">
            <summary>
            描述 : 修改程序名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.ModUser">
            <summary>
            描述 : 修改用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.BlockLogsMstr.Domain">
            <summary>
            描述 : 域
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="T:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr">
            <summary>
            Debug记录日志 
            </summary>
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.Id">
            <summary>
            描述 : ID
            允许空值 : False
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsSollutionName">
            <summary>
            描述 : 项目
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsTimeStamp">
            <summary>
            描述 : 时间戳
            允许空值 : False
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsUser">
            <summary>
            描述 : 用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsSession">
            <summary>
            描述 : session
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsIp">
            <summary>
            描述 : ip
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsMenu">
            <summary>
            描述 : 菜单功能
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsApiName">
            <summary>
            描述 : 接口名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsCallStartTime">
            <summary>
            描述 : ID
            允许空值 : 调用开始时间
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsCallApiTime">
            <summary>
            描述 : 调到接口时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsApiTotalTime">
            <summary>
            描述 : 接口耗时时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.DebugLogsMsg">
            <summary>
            描述 : ID
            允许空值 : 日志信息
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.CrtDatetime">
            <summary>
            描述 : 创建时间
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.CrtProg">
            <summary>
            描述 : 程序名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.CrtUser">
            <summary>
            描述 : 创建用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.ModDatetime">
            <summary>
            描述 : 修改日期
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.ModProg">
            <summary>
            描述 : 修改程序名
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.ModUser">
            <summary>
            描述 : 修改用户
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="P:CoreWebAPI.Common.LogHelper.WriteLogToPgsqlHelper.DebugLogsMstr.Domain">
            <summary>
            描述 : 域
            允许空值 : True
            默认值 : 
            </summary>        
        </member>
        <member name="T:CoreWebAPI.Common.LogHelper.SerilogHelper">
            <summary>
            日志输出类
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.SerilogHelper.WriteLog(System.String,System.String,System.Object[])">
            <summary>
            记录日常日志
            </summary>
            <param name="filename">日志文件名，前缀为</param>
            <param name="methodName">方法名</param>
            <param name="dataParas">内容参数</param>
        </member>
        <member name="M:CoreWebAPI.Common.LogHelper.SerilogHelper.WriteErrorLog(System.String,System.String,System.Exception)">
            <summary>
            记录异常日志
            </summary>
            <param name="filename">日志文件名</param>
            <param name="methodName">方法名</param>
            <param name="ex">异常错误</param>
        </member>
        <member name="T:CoreWebAPI.Common.Redis.IRedisBasketRepository">
            <summary>
            Redis缓存接口
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisBasketRepository.GetValue(System.String)">
            <summary>
            获取缓存值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisBasketRepository.Get``1(System.String)">
            <summary>
            获取值，并序列化
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisBasketRepository.Set(System.String,System.Object,System.Double)">
            <summary>
            新增、修改
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expirySecond"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisBasketRepository.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            新增、修改
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="cacheTime"></param>
            <returns></returns>
        </member>
        <member name="T:CoreWebAPI.Common.Redis.IRedisCacheManager">
            <summary>
            Redis缓存接口
            </summary>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisCacheManager.Remove(System.String)">
            <summary>
            移除某一个缓存值
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisCacheManager.RemoveByBegin(System.String)">
            <summary>
            移除key值以***开头的缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisCacheManager.RemoveByEnd(System.String)">
            <summary>
            移除key值以***结尾的缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.IRedisCacheManager.RemoveByContains(System.String)">
            <summary>
            移除key值包含***的缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.RemoveBegin(System.String)">
            <summary>
            移除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRangeAsync(System.String)">
            <summary>
            根据key获取RedisValue
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListLeftPushAsync(System.String,System.String,System.Int32)">
            <summary>
            在列表头部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRightPushAsync(System.String,System.String,System.Int32)">
            <summary>
            在列表尾部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRightPushAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            在列表尾部插入数组集合。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListLeftPopAsync``1(System.String,System.Int32)">
            <summary>
            移除并返回存储在该键列表的第一个元素  反序列化
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRightPopAsync``1(System.String,System.Int32)">
            <summary>
            移除并返回存储在该键列表的最后一个元素   反序列化
            只能是对象集合
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListLeftPopAsync(System.String,System.Int32)">
            <summary>
            移除并返回存储在该键列表的第一个元素   
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRightPopAsync(System.String,System.Int32)">
            <summary>
            移除并返回存储在该键列表的最后一个元素   
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListLengthAsync(System.String,System.Int32)">
            <summary>
            列表长度
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRangeAsync(System.String,System.Int32)">
            <summary>
            返回在该列表上键所对应的元素
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListRangeAsync(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据索引获取指定位置数据
            </summary>
            <param name="redisKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListDelRangeAsync(System.String,System.String,System.Int64,System.Int32)">
            <summary>
            删除List中的元素 并返回删除的个数
            </summary>
            <param name="redisKey">key</param>
            <param name="redisValue">元素</param>
            <param name="type">大于零 : 从表头开始向表尾搜索，小于零 : 从表尾开始向表头搜索，等于零：移除表中所有与 VALUE 相等的值</param>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisBasketRepository.ListClearAsync(System.String,System.Int32)">
            <summary>
            清空List
            </summary>
            <param name="redisKey"></param>
            <param name="db"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.GetRedisConnection">
            <summary>
            核心代码，获取连接实例
            通过双if 夹lock的方式，实现单例模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Exist(System.String)">
            <summary>
            判断是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Get(System.String)">
            <summary>
            查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Get``1(System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Set(System.String,System.Object,System.Double)">
            <summary>
            增加/修改
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expirySecond"></param>
            <returns></returns>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.RemoveByBegin(System.String)">
            <summary>
            移除key以指定字符串开头的所有缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.RemoveByEnd(System.String)">
            <summary>
            移除key以指定字符串结尾的所有缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.RemoveByContains(System.String)">
            <summary>
            移除包含以指定字符串的所有缓存
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CoreWebAPI.Common.Redis.RedisCacheManager.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:AutoLoginNetterm.Helper.DESHelper.DESEncrypt(System.String,System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="key">密钥，必须8位</param>
            <param name="iv">向量，必须8位</param>
            <param name="data">明文</param>
            <returns></returns>
        </member>
        <member name="M:AutoLoginNetterm.Helper.DESHelper.DESDecrypt(System.String,System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="key">密钥，必须8位</param>
            <param name="iv">向量，必须8位</param>
            <param name="data">密文</param>
            <returns></returns>
        </member>
        <member name="M:ACH_DAM.Services.Helper.ExcelHelperNew.DataTableToExcel(System.Data.DataTable,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将DataTable数据导入到excel中
            </summary>
            <param name="data">要导入的数据</param>
            <param name="sheetName">要导入的excel的sheet的名称，默认:sheet1</param>
            <param name="isColumnWritten">DataTable的列名是否要导入,默认true</param>
            <param name="dateFormat">日期格式，默认:yyyy/MM/dd</param>
            <param name="intFormat">整数值格式，默认:#,##0</param>
            <param name="decFormat">浮点数值格式，默认:#,##0.00</param>
            <param name="boolTrueFormat">布尔值“真”格式，默认:yes</param>
            <param name="boolFalseFormat">布尔值“假”格式，默认:no</param>
            <returns>导出数据行数(包含列名那一行)</returns>
        </member>
        <member name="T:ACH_DAM.Services.Helper.ExcelHelperNew.DTlist">
            <summary>
            输出excel的datatable结构体
            </summary>
        </member>
        <member name="M:ACH_DAM.Services.Helper.ExcelHelperNew.DataTableListToExcel(System.Collections.Generic.List{ACH_DAM.Services.Helper.ExcelHelperNew.DTlist},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dtlistdata">数据集合</param>
            <param name="dateFormat">日期格式，默认:yyyy/MM/dd</param>
            <param name="intFormat">整数值格式，默认:#,##0</param>
            <param name="decFormat">浮点数值格式，默认:#,##0.00</param>
            <param name="boolTrueFormat">布尔值“真”格式，默认:yes</param>
            <param name="boolFalseFormat">布尔值“假”格式，默认:no</param>
            <returns></returns>
        </member>
        <member name="M:ACH_DAM.Services.Helper.ExcelHelperNew.ExcelToDataTable(System.String,System.Boolean)">
            <summary>
            将excel中的数据导入到DataTable中
            </summary>
            <param name="sheetName">excel工作薄sheet的名称</param>
            <param name="isFirstRowColumn">第一行是否是DataTable的列名</param>
            <returns>返回的DataTable</returns>
        </member>
        <member name="M:ACH_DAM.Services.Helper.ExcelHelperNew.ExcelToList``1(System.String,System.Boolean)">
            <summary>
            将excel中的数据导入到List中
            </summary>
            <typeparam name="T">List数据类型</typeparam>
            <param name="sheetName">excel工作薄sheet的名称</param>
            <param name="isFirstRowColumn">第一行是否是DataTable的列名</param>
            <returns></returns>
        </member>
        <member name="M:ACH_DAM.Services.Helper.ExcelHelperNew.GetCellValue(NPOI.SS.UserModel.ICell,System.Boolean)">
            <summary>
            获取单元格类型
            </summary>
            <param name="cell">单元格</param>
            <param name="isFormula">单元格内容是否为公式</param>
            <returns></returns>
        </member>
        <member name="T:MessageGrpc.MessageReflection">
            <summary>Holder for reflection information generated from Protos/message.proto</summary>
        </member>
        <member name="P:MessageGrpc.MessageReflection.Descriptor">
            <summary>File descriptor for Protos/message.proto</summary>
        </member>
        <member name="T:MessageGrpc.RequestModel">
            <summary>
            Request 请求结构
            The request message containing the user's name.
            </summary>
        </member>
        <member name="F:MessageGrpc.RequestModel.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="F:MessageGrpc.RequestModel.LangFieldNumber">
            <summary>Field number for the "lang" field.</summary>
        </member>
        <member name="F:MessageGrpc.RequestModel.DefaultValueFieldNumber">
            <summary>Field number for the "defaultValue" field.</summary>
        </member>
        <member name="T:MessageGrpc.ReplyModel">
            <summary>
            Response 响应结构
            The response message containing the greetings.
            </summary>
        </member>
        <member name="F:MessageGrpc.ReplyModel.CodeFieldNumber">
            <summary>Field number for the "Code" field.</summary>
        </member>
        <member name="F:MessageGrpc.ReplyModel.MsgFieldNumber">
            <summary>Field number for the "Msg" field.</summary>
        </member>
        <member name="F:MessageGrpc.ReplyModel.DataFieldNumber">
            <summary>Field number for the "Data" field.</summary>
        </member>
        <member name="F:MessageGrpc.ReplyModel.MethodNameFieldNumber">
            <summary>Field number for the "MethodName" field.</summary>
        </member>
        <member name="T:MessageGrpc.Message">
            <summary>
            定义服务
            The greeting service definition.
            </summary>
        </member>
        <member name="P:MessageGrpc.Message.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:MessageGrpc.Message.MessageClient">
            <summary>Client for Message</summary>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Message</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Message that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.GetMessage(MessageGrpc.RequestModel,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            定义方法
            Sends a greeting
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.GetMessage(MessageGrpc.RequestModel,Grpc.Core.CallOptions)">
            <summary>
            定义方法
            Sends a greeting
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.GetMessageAsync(MessageGrpc.RequestModel,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            定义方法
            Sends a greeting
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.GetMessageAsync(MessageGrpc.RequestModel,Grpc.Core.CallOptions)">
            <summary>
            定义方法
            Sends a greeting
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:MessageGrpc.Message.MessageClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="T:GrpcService1.MessageJavaReflection">
            <summary>Holder for reflection information generated from Protos/messageJava.proto</summary>
        </member>
        <member name="P:GrpcService1.MessageJavaReflection.Descriptor">
            <summary>File descriptor for Protos/messageJava.proto</summary>
        </member>
        <member name="F:GrpcService1.MessageRequest.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="F:GrpcService1.MessageRequest.MessageIdFieldNumber">
            <summary>Field number for the "message_id" field.</summary>
        </member>
        <member name="F:GrpcService1.MessageRequest.LanguageIdFieldNumber">
            <summary>Field number for the "language_id" field.</summary>
        </member>
        <member name="F:GrpcService1.MessageRequest.ActiveFieldNumber">
            <summary>Field number for the "active" field.</summary>
        </member>
        <member name="F:GrpcService1.MessageResponse.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="P:GrpcService1.Message.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:GrpcService1.Message.MessageClient">
            <summary>Client for Message</summary>
        </member>
        <member name="M:GrpcService1.Message.MessageClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Message</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:GrpcService1.Message.MessageClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Message that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:GrpcService1.Message.MessageClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:GrpcService1.Message.MessageClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:GrpcService1.Message.MessageClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
    </members>
</doc>
